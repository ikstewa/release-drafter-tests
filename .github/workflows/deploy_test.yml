name: Deploy

on:
  workflow_dispatch:

jobs:

  create_deployment:
    name: Create Deployment
    runs-on: ubuntu-latest
    outputs:
      deployment_id: ${{ steps.deployment.outputs.deployment_id }}
    steps:
      - uses: chrnorm/deployment-action@releases/v1
        name: Create GitHub deployment
        id: deployment
        with:
          # One of: error, failure, inactive, in_progress, queued, pending, or success
          initial_status: pending
          token: "${{ github.token }}"
          description: "Testing my deployment"
          ref: ${{ github.head_ref }}
          target_url: https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID
          environment: production

  do_deployment:
    name: Deploy Production
    needs: create_deployment
    runs-on: ubuntu-latest
    environment: require_approval
    steps:
      - name: Update deployment status (success)
        uses: chrnorm/deployment-status@releases/v1
        with:
          state: in_progress
          token: "${{ github.token }}"
          log_url: https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID
          description: "Deployment starting"
          environment_url: "http://myapp.com"
          deployment_id: ${{needs.create_deployment.outputs.deployment_id}}
      - name: Deploy my app
        run: |
          echo "I'm DEPLOYING!!!"
          sleep 10

  deployment_status:
    name: Deployment Status
    runs-on: ubuntu-latest
    needs: [create_deployment, do_deployment]
    if: always()
    steps: 
      - uses: martialonline/workflow-status@v2
        id: check
      - uses: chrnorm/deployment-status@releases/v1
        if: steps.check.outputs.status == 'cancelled'
        with:
          state: inactive
          token: ${{ github.token }}
          deployment_id: ${{needs.create_deployment.outputs.deployment_id}}
      - uses: chrnorm/deployment-status@releases/v1
        if: steps.check.outputs.status != 'cancelled'
        with:
          state: ${{ steps.check.outputs.status }}
          token: ${{ github.token }}
          deployment_id: ${{needs.create_deployment.outputs.deployment_id}}

